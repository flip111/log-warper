cabal-version:       3.8
name:                log-warper
version:             1.9.0
synopsis:            Flexible, configurable, monadic and pretty logging
homepage:            https://github.com/serokell/log-warper
license:             MIT
license-file:        LICENSE
author:              @serokell
maintainer:          Serokell <hi@serokell.io>
copyright:           2016-2018 Serokell
category:            Logging
extra-source-files:  CHANGES.md
                   , README.md
                   , examples/HowTo.md
                   , examples/HowTo.lhs
                   , examples/PureLogging.md
                   , examples/PureLogging.lhs
stability:           experimental
build-type:          Simple
description:         This package implements nice and featureful wrapper around hslogger library.

library
  exposed-modules:     System.Wlog
                       System.Wlog.CanLog
                       System.Wlog.Exception
                       System.Wlog.FileUtils
                       System.Wlog.Formatter
                       System.Wlog.HasLoggerName
                       System.Wlog.IOLogger
                       System.Wlog.Launcher
                       System.Wlog.LoggerConfig
                       System.Wlog.LoggerName
                       System.Wlog.LoggerNameBox
                       System.Wlog.LogHandler
                           System.Wlog.LogHandler.Roller
                           System.Wlog.LogHandler.Simple
                       System.Wlog.PureLogging
                       System.Wlog.Severity
                       System.Wlog.Terminal
  if impl(ghc >= 8.2.2)
     exposed-modules:  System.Wlog.Concurrent

  other-modules:       System.Wlog.Color
                       System.Wlog.MemoryQueue

  build-depends:       base
                     , aeson
                     , ansi-terminal
                     , containers
                     , deepseq
                     , directory
                     , filepath
                     , fmt
                     , lifted-async
                     , microlens-platform
                     , monad-control
                     , monad-loops
                     , mmorph
                     , mtl
                     , o-clock
                     , text
                     , time
                     , transformers
                     , transformers-base
                     , universum
                     , unordered-containers
                     , vector
                     , yaml

  if !os(windows)
    build-depends:     unix

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -fno-warn-orphans

  default-extensions:  GeneralizedNewtypeDeriving
                       BangPatterns
                       DeriveDataTypeable
                       DeriveGeneric
                       NoImplicitPrelude
                       OverloadedStrings
                       TypeApplications
                       RecordWildCards

executable play-log
  main-is:             Playground.hs

  build-depends:       log-warper
                     , universum
                     , microlens
                     , monad-control
                     , yaml
  if impl(ghc >= 8.2.2)
     build-depends:   o-clock

  hs-source-dirs:      examples
  default-language:    Haskell2010
  ghc-options:         -threaded -Wall
                       -fno-warn-orphans

  default-extensions:  GeneralizedNewtypeDeriving
                       DeriveDataTypeable
                       DeriveGeneric
                       NoImplicitPrelude
                       OverloadedStrings
                       TypeApplications
                       RecordWildCards

executable how-to
  main-is:             HowTo.lhs

  build-tool-depends:  markdown-unlit:markdown-unlit

  build-depends:       base
                     , log-warper
                     , markdown-unlit
                     , text

  hs-source-dirs:      examples
  default-language:    Haskell2010
  ghc-options:         -threaded -Wall
                       -fno-warn-orphans
                       -pgmL markdown-unlit

executable pure-how-to
  main-is:             PureLogging.lhs

  build-tool-depends:  markdown-unlit:markdown-unlit
  build-depends:       base
                     , log-warper
                     , markdown-unlit
                     , mtl
                     , text

  hs-source-dirs:      examples
  default-language:    Haskell2010
  ghc-options:         -threaded -Wall
                       -fno-warn-orphans
                       -pgmL markdown-unlit

test-suite log-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Test.hs
  other-modules:       Spec
                       Test.Wlog.RollingSpec

  build-tool-depends:  hspec-discover:hspec-discover
  build-depends:       async
                     , base
                     , data-default
                     , directory
                     , filepath
                     , hspec
                     , HUnit
                     , microlens-mtl
                     , log-warper
                     , QuickCheck
                     , universum
                     , unordered-containers

  default-language:    Haskell2010
  ghc-options:         -threaded
                       -rtsopts
                       -Wall
                       -fno-warn-orphans
                       -with-rtsopts=-N

  default-extensions:   DeriveDataTypeable
                        DeriveGeneric
                        GeneralizedNewtypeDeriving
                        StandaloneDeriving
                        FlexibleContexts
                        FlexibleInstances
                        MultiParamTypeClasses
                        FunctionalDependencies
                        DefaultSignatures
                        NoImplicitPrelude
                        OverloadedStrings
                        RecordWildCards
                        TypeApplications
                        TupleSections
                        ViewPatterns
                        LambdaCase
                        MultiWayIf
